"""ZCM type definitions
This file automatically generated by zcm.
DO NOT MODIFY BY HAND!!!!
"""

try:
    import cStringIO.StringIO as BytesIO
except ImportError:
    from io import BytesIO
import struct

from sensor_driver.common_lib.logging.message.geometry_msgs.Pose import Pose as geometry_msgs_Pose

class PoseWithCovariance(object):
    __slots__ = ["pose", "covariance"]

    IS_LITTLE_ENDIAN = False;
    def __init__(self):
        self.pose = geometry_msgs_Pose()
        self.covariance = [ 0.0 for dim0 in range(36) ]

    def encode(self):
        buf = BytesIO()
        buf.write(PoseWithCovariance._get_packed_fingerprint())
        self._encode_one(buf)
        return buf.getvalue()

    def _encode_one(self, buf):
        assert self.pose._get_packed_fingerprint() == geometry_msgs_Pose._get_packed_fingerprint()
        self.pose._encode_one(buf)
        buf.write(struct.pack('>36d', *self.covariance[:36]))

    def decode(data):
        if hasattr(data, 'read'):
            buf = data
        else:
            buf = BytesIO(data)
        if buf.read(8) != PoseWithCovariance._get_packed_fingerprint():
            raise ValueError("Decode error")
        return PoseWithCovariance._decode_one(buf)
    decode = staticmethod(decode)

    def _decode_one(buf):
        self = PoseWithCovariance()
        self.pose = geometry_msgs_Pose._decode_one(buf)
        self.covariance = struct.unpack('>36d', buf.read(288))
        return self
    _decode_one = staticmethod(_decode_one)

    _hash = None
    def _get_hash_recursive(parents):
        if PoseWithCovariance in parents: return 0
        newparents = parents + [PoseWithCovariance]
        tmphash = (0xacc8f689378a06a1+ geometry_msgs_Pose._get_hash_recursive(newparents)) & 0xffffffffffffffff
        tmphash  = (((tmphash<<1)&0xffffffffffffffff)  + ((tmphash>>63)&0x1)) & 0xffffffffffffffff
        return tmphash
    _get_hash_recursive = staticmethod(_get_hash_recursive)
    _packed_fingerprint = None

    def _get_packed_fingerprint():
        if PoseWithCovariance._packed_fingerprint is None:
            PoseWithCovariance._packed_fingerprint = struct.pack(">Q", PoseWithCovariance._get_hash_recursive([]))
        return PoseWithCovariance._packed_fingerprint
    _get_packed_fingerprint = staticmethod(_get_packed_fingerprint)

